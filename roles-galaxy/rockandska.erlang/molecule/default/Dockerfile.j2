# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image | lower }}
{% else %}
FROM {{ item.image | lower }}
{% endif %}

ENV container docker
ENV LC_ALL C
{% if item.image | lower | regex_search('^(debian|ubuntu)') %}
ENV DEBIAN_FRONTEND noninteractive
{% endif %}

{% if item.image | lower | regex_search('^debian') %}
# Debian
RUN apt-get update \
    && apt-get install -y --no-install-recommends systemd python sudo bash iproute net-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
{% elif item.image | lower | regex_search('^ubuntu') %}
# Ubuntu
RUN apt-get update \
    && apt-get install -y --no-install-recommends systemd python sudo bash iproute2 net-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
{% elif item.image | lower | regex_search('^centos') %}
# CentOS
RUN yum -y update \
    && yum -y install systemd sudo python bash iproute net-tools \
    && yum clean all
{% endif %}

RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;

RUN systemctl set-default multi-user.target

VOLUME [ "/sys/fs/cgroup" ]

{% if item.image | lower | regex_search('^(debian|ubuntu)') %}
# Debian
CMD ["/lib/systemd/systemd"]
{% elif item.image | lower | regex_search('^centos') %}
# CentOS
CMD ["/usr/sbin/init"]
{% endif %}
